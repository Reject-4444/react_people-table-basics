{"version":3,"sources":["components/Navigation.tsx","App.tsx","components/HomePage.tsx","types/Person.ts","components/PeoplePageContent.tsx","components/Loader/Loader.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navigation","generateClassForLink","isActive","cn","className","role","to","App","HomePage","ErrorOption","PeoplePageContent","person","getParentLink","slug","useParams","getParentContent","parentName","result","parent","sex","name","motherContent","motherName","fatherContent","fatherName","born","died","Loader","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","noError","errorOption","setErrorOption","useEffect","fetch","then","response","json","data","length","Empty","catch","Wrong","finally","find","map","mother","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1eecf2f0.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation = () => {\n  const generateClassForLink = ({\n    isActive,\n  }: {\n    isActive: boolean\n  }) => cn('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={generateClassForLink} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={generateClassForLink} to=\"people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export interface Person {\n  name: string,\n  sex: string,\n  born: number,\n  died: number,\n  fatherName: string | null,\n  motherName: string | null,\n  slug: string,\n  mother?: Person,\n  father?: Person,\n}\n\nexport enum ErrorOption {\n  noError,\n  Wrong,\n  Empty,\n}\n","import { FC } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  getParentLink: (par: string) => Person | undefined;\n};\n\nexport const PeoplePageContent: FC<Props> = ({ person, getParentLink }) => {\n  const generateClassForPerson = () => cn({\n    'has-text-danger': person.sex === 'f',\n  });\n\n  const { slug } = useParams();\n\n  const getParentContent = (parentName: string) => {\n    let result;\n\n    if (getParentLink(parentName)) {\n      const parent = getParentLink(parentName);\n\n      result = (\n        <td>\n          <NavLink\n            to={`/people/${parent?.slug}`}\n            className={cn({ 'has-text-danger': parent?.sex === 'f' })}\n          >\n            {parent?.name}\n          </NavLink>\n        </td>\n      );\n    }\n\n    if (parentName && !getParentLink(parentName)) {\n      result = <td>{parentName}</td>;\n    }\n\n    return result;\n  };\n\n  const motherContent = person.motherName\n    ? getParentContent(person.motherName)\n    : <td>-</td>;\n\n  const fatherContent = person.fatherName\n    ? getParentContent(person.fatherName)\n    : <td>-</td>;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={slug === person.slug ? 'has-background-warning' : ''}\n    >\n      <td>\n        <NavLink\n          className={generateClassForPerson}\n          to={`/people/${person.slug}`}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {motherContent}\n      {fatherContent}\n    </tr>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { ErrorOption, Person } from '../types';\nimport { PeoplePageContent } from './PeoplePageContent';\nimport { Loader } from './Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorOption, setErrorOption] = useState(ErrorOption.noError);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.length) {\n          setErrorOption(ErrorOption.Empty);\n        }\n\n        setPeople(data);\n      })\n      .catch(() => setErrorOption(ErrorOption.Wrong))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getParentLink = (parentName: string) => {\n    return people.find((person) => person.name === parentName);\n  };\n\n  return (\n    <>\n      {people.map((person) => (\n        <p>{person.mother?.slug}</p>\n      ))}\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && errorOption === ErrorOption.noError && <Loader />}\n          {!isLoading && errorOption === ErrorOption.noError && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {people.length\n                && people.map((person) => (\n                  <PeoplePageContent\n                    key={person.slug}\n                    person={person}\n                    getParentLink={getParentLink}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n\n          {errorOption === ErrorOption.Empty && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {errorOption === ErrorOption.Wrong && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people/:slug?\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"/home\" element={<Navigate replace to=\"/\" />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}